{"version":3,"sources":["../lib/time.js","../lib/pureRender.js","../lib/prefix.js","../lib/index.js","../lib/DatePickerItem.js","../lib/DatePicker.js","../lib/Modal.js"],"names":["throwIfInvalidDate","date","Object","prototype","toString","call","Error","daysInMonth","year","month","Date","getDate","convertDate","format","str","o","getMonth","getHours","getMinutes","getSeconds","test","replace","RegExp","$1","getFullYear","substr","length","k","nextYear","now","index","arguments","undefined","nextMonth","dayOfMonth","Math","min","nextDate","shallowEqual","prev","next","prevKeys","keys","nextKeys","every","key","hasOwnProperty","PureRender","Component","shouldComponentUpdate","nextProps","nextState","this","props","state","camelCase","$0","toUpperCase","formatCss","prefixs","result","regPrefix","styleValue","i","styleName","addPrefixCss","element","formatedProps","style","EnhanceDatePicker","_ref","onModalClose","event","target","currentTarget","onCancel","isOpen","objectWithoutProperties","React","display","DatePicker","ModalDatePicker","_ref2","isPopup","preProps","preState","DATE_HEIGHT","DATE_LENGTH","MIDDLE_INDEX","floor","MIDDLE_Y","DatePickerItem","_Component","animating","touchY","translateY","currentIndex","_this","renderDatepickerItem","bind","handleContentTouch","handleContentMouseDown","handleContentMouseMove","handleContentMouseUp","componentWillMount","_iniDates","value","componentWillReceiveProps","getTime","setState","typeName","dates","Array","apply","map","TimeUtil","_updateDates","direction","slice","concat","_checkIsUpdateDates","_clearTransition","obj","transition","_moveToNext","max","_props","_moveTo","refs","scroll","onSelect","_this2","handleStart","pageY","targetTouches","handleMove","dir","_props2","handleEnd","changedTouches","preventDefault","type","addEventListener","removeEventListener","className","render","scrollStyle","marginTop","propTypes","PropTypes","object","string","func","handleFinishBtnClick","handleDateSelect","theme","dateFormat","themeClassName","indexOf","array","renderSubtreeIntoContainer","ReactDOM","unstable_renderSubtreeIntoContainer","Modal","componentDidMount","_div","document","createElement","classList","add","body","appendChild","renderPortal","newProps","componentWillUnmount","unmountComponentAtNode","parentNode","removeChild","portal","cloneElement","children","_extends","node","bool","defaultProps"],"mappings":"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","file":"react-mobile-datepicker.min.js","sourcesContent":["/**\n * @module time工具\n */\n\n\nfunction throwIfInvalidDate(date) {\n    if (Object.prototype.toString.call(date, null) !== '[object Date]') {\n        throw new Error('参数类型不对');\n    }\n}\n\nfunction daysInMonth(year, month) {\n    return new Date(year, month + 1, 0).getDate();\n}\n\n/**\n * 对Date的扩展，将 Date 转化为指定格式的String\n * @param  {Date}       日期\n * @return {String}     字符串格式\n */\nexport function convertDate(date, format) {\n    let str = format;\n    const o = {\n        'M+': date.getMonth() + 1,\n        'D+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n    };\n    if (/(Y+)/.test(format)) {\n        str = str.replace(RegExp.$1,\n                (date.getFullYear().toString()).substr(4 - RegExp.$1.length));\n    }\n\n    for (const k in o) { // eslint-disable-line\n        if (new RegExp(`(${k})`).test(format)) {\n            str = str.replace(RegExp.$1,\n                (RegExp.$1.length === 1) ?\n                o[k] : (`00${o[k]}`.substr((o[k].toString()).length)));\n        }\n    }\n\n    return str;\n}\n\n/**\n * 获取相对日期的偏移日期\n * @param  {Date}       日期\n * @return {number}     相对的天数\n */\nexport function nextYear(now, index = 0) {\n    throwIfInvalidDate(now);\n    const date = new Date(now.getFullYear() + index, now.getMonth(), now.getDate());\n    return date;\n}\n\nexport function nextMonth(now, index = 0) {\n    throwIfInvalidDate(now);\n    const year = now.getFullYear();\n    const month = now.getMonth() + index;\n    const dayOfMonth = Math.min(now.getDate(), daysInMonth(year, month));\n    const date = new Date(year, month, dayOfMonth);\n    return date;\n}\n\nexport function nextDate(now, index = 0) {\n    throwIfInvalidDate(now);\n    const date = new Date(now.getFullYear(), now.getMonth(), now.getDate() + index);\n    return date;\n}\n","export function shallowEqual(prev, next) {\n    if (prev === next) return true;\n    const prevKeys = Object.keys(prev);\n    const nextKeys = Object.keys(next);\n\n    if (prevKeys.length !== nextKeys.length) return false;\n\n    return prevKeys.every((key) => {\n        return prev.hasOwnProperty(key) && prev[key] === next[key];\n    });\n}\n\nfunction PureRender(Component) {\n    Component.prototype.shouldComponentUpdate = function(nextProps, nextState) {\n        return PureRender.shouldComponentUpdate(nextProps, nextState, this.props, this.state);\n    };\n}\n\nPureRender.shouldComponentUpdate = function (nextProps, nextState, preProps, preState) {\n    return !shallowEqual(preProps, nextProps) || !shallowEqual(preState, nextState);\n};\n\nexport default PureRender;\n","/**\n * 驼峰写法\n * @param  {String} str 要转化的字符串\n * @return {String}     转化后的字符串\n */\nexport function camelCase(str) {\n    return str.replace(/-([a-z])/g, ($0, $1) => $1.toUpperCase()).replace('-', '');\n}\n\n/**\n * 格式化css属性对象\n * @param  {Object} props 属性对象\n * @return {Object}       添加前缀的格式化属性对象\n */\nexport function formatCss(props) {\n    const prefixs = ['-webkit-', '-moz-', '-ms-'];\n\n    const result = {};\n\n    const regPrefix = /transform|transition/;\n\n\n    for (const key in props) {\n        if (props.hasOwnProperty(key)) {\n            const styleValue = props[key];\n\n            // 如果检测是transform或transition属性\n            if (regPrefix.test(key)) {\n                for (let i = 0; i < prefixs.length; i++) {\n                    const styleName = camelCase(prefixs[i] + key);\n                    result[styleName] = styleValue.replace(regPrefix, `${prefixs[i]}$&`);\n                }\n            }\n\n            result[key] = styleValue;\n        }\n    }\n\n    return result;\n}\n\n/**\n * 为元素添加css样式\n * @param {Object} element 目标元素\n * @param {Object} props   css属性对象\n */\nexport function addPrefixCss(element, props) {\n    const formatedProps = formatCss(props);\n    for (const key in formatedProps) {\n        if (formatedProps.hasOwnProperty(key)) {\n            element.style[key] = formatedProps[key];\n        }\n    }\n}\n","import './index.css';\nimport React, { PropTypes } from 'react';\nimport DatePicker from './DatePicker.js';\nimport Modal from './Modal.js';\n\n\nfunction EnhanceDatePicker({ isOpen, ...props }) {\n    function onModalClose(event) {\n        if (event.target === event.currentTarget) {\n            props.onCancel();\n        }\n    }\n\n    return (\n        <div\n            style={{ display: isOpen ? '' : 'none' }}\n            onClick={onModalClose}\n            className=\"datepicker-modal\">\n            <DatePicker {...props} />\n        </div>\n    );\n}\n\n\nfunction ModalDatePicker({ isPopup, ...props }) {\n    if (!isPopup) {\n        return <DatePicker {...props} />;\n    }\n\n    return (\n        <Modal {...props}>\n            <EnhanceDatePicker />\n        </Modal>\n    );\n}\n\nModalDatePicker.propTypes = {\n    isPopup: PropTypes.bool,\n    isOpen: PropTypes.bool,\n    theme: PropTypes.string,\n    value: PropTypes.object,\n    min: PropTypes.object,\n    max: PropTypes.object,\n    dateFormat: PropTypes.array,\n    onSelect: PropTypes.func,\n    onCancel: PropTypes.func,\n};\n\nModalDatePicker.defaultProps = {\n    isPopup: true,\n    isOpen: false,\n    theme: 'default',\n    value: new Date(),\n    min: new Date(1970, 0, 1),\n    max: new Date(2050, 0, 1),\n    dateFormat: ['YYYY', 'M', 'D'],\n    onSelect: () => {},\n    onCancel: () => {},\n};\n\nexport default ModalDatePicker;\n","\n/**\n * @module Date组件\n */\nimport React, { Component, PropTypes } from 'react';\nimport * as TimeUtil from './time.js';\nimport { shallowEqual } from './pureRender.js';\nimport { addPrefixCss, formatCss } from './prefix.js';\n\nconst DATE_HEIGHT = 40;                              // 每个日期的高度\nconst DATE_LENGTH = 10;                              // 日期的个数\nconst MIDDLE_INDEX = Math.floor(DATE_LENGTH / 2);     // 日期数组中间值的索引\nconst MIDDLE_Y = - DATE_HEIGHT * MIDDLE_INDEX;       // translateY值\n\n\n/**\n * Class Date组件类\n * @extends Component\n */\nclass DatePickerItem extends Component {\n    constructor(props) {\n        super(props);\n        this.animating = false;                 // 判断是否在transition过渡动画之中\n        this.touchY = 0;                        // 保存touchstart的pageY\n        this.translateY = 0;                    // 容器偏移的距离\n        this.currentIndex = MIDDLE_INDEX;       // 滑动中当前日期的索引\n\n        this.state = {\n            translateY: MIDDLE_Y,\n            marginTop: (this.currentIndex - MIDDLE_INDEX) * DATE_HEIGHT,\n        };\n\n        this.renderDatepickerItem = this.renderDatepickerItem.bind(this);\n        this.handleContentTouch = this.handleContentTouch.bind(this);\n        this.handleContentMouseDown = this.handleContentMouseDown.bind(this);\n        this.handleContentMouseMove = this.handleContentMouseMove.bind(this);\n        this.handleContentMouseUp = this.handleContentMouseUp.bind(this);\n    }\n\n    componentWillMount() {\n        this._iniDates(this.props.value);\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value.getTime() === this.props.value.getTime()) {\n            return;\n        }\n        this._iniDates(nextProps.value);\n        this.currentIndex = MIDDLE_INDEX;\n        this.setState({\n            translateY: MIDDLE_Y,\n            marginTop: (this.currentIndex - MIDDLE_INDEX) * DATE_HEIGHT,\n        });\n    }\n\n    /**\n     * Optimization component, Prevents unnecessary rendering\n     * Only value or state change should re-rendering\n     *\n     * @param  {Object} nextProps next props\n     * @param  {Object} nextState next state\n     * @return {Boolean}          Whether re-rendering\n     */\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.value.getTime() !== this.props.value.getTime() ||\n            !shallowEqual(nextState, this.state);\n    }\n\n    _iniDates(date) {\n        const { typeName } = this.props;\n        const dates = Array(...Array(DATE_LENGTH))\n            .map((value, index) =>\n                TimeUtil[`next${typeName}`](date, index - MIDDLE_INDEX));\n        this.setState({ dates });\n    }\n\n    _updateDates(direction) {\n        const { typeName } = this.props;\n        const { dates } = this.state;\n        if (direction === 1) {\n            this.currentIndex ++;\n            this.setState({\n                dates: [\n                    ...dates.slice(1),\n                    TimeUtil[`next${typeName}`](dates[dates.length - 1], 1),\n                ],\n                marginTop: (this.currentIndex - MIDDLE_INDEX) * DATE_HEIGHT,\n            });\n        } else {\n            this.currentIndex --;\n            this.setState({\n                dates: [\n                    TimeUtil[`next${typeName}`](dates[0], -1),\n                    ...dates.slice(0, dates.length - 1),\n                ],\n                marginTop: (this.currentIndex - MIDDLE_INDEX) * DATE_HEIGHT,\n            });\n        }\n    }\n\n    _checkIsUpdateDates(direction, translateY) {\n        return direction === 1 ?\n            this.currentIndex * DATE_HEIGHT + DATE_HEIGHT / 2 < -translateY :\n            this.currentIndex * DATE_HEIGHT - DATE_HEIGHT / 2 > -translateY;\n    }\n\n    /**\n     * 清除对象的transition样式\n     * @param  {Dom}     obj     指定的对象\n     * @return {undefined}\n     */\n    _clearTransition(obj) {\n        addPrefixCss(obj, { transition: '' });\n    }\n\n    /**\n     * 滑动到下一日期\n     * @param  {number} direction 滑动方向\n     * @return {undefined}\n     */\n    _moveToNext(direction) {\n        const date = this.state.dates[MIDDLE_INDEX];\n        const { max, min } = this.props;\n        if (direction === -1 && date.getTime() < min.getTime()) {\n            this._updateDates(1);\n        } else if (direction === 1 && date.getTime() > max.getTime()) {\n            this._updateDates(-1);\n        }\n\n        this._moveTo(this.refs.scroll, this.currentIndex);\n    }\n\n    /**\n     * 添加滑动动画\n     * @param  {DOM} obj   DOM对象\n     * @param  {number} angle 角度\n     * @return {undefined}\n     */\n    _moveTo(obj, currentIndex) {\n        this.animating = true;\n\n        addPrefixCss(obj, { transition: 'transform .2s ease-out' });\n\n        this.setState({\n            translateY: -currentIndex * DATE_HEIGHT,\n        });\n\n        // NOTE: There is no transitionend, setTimeout is used instead.\n        setTimeout(() => {\n            this.animating = false;\n            this.props.onSelect(this.state.dates[MIDDLE_INDEX]);\n            this._clearTransition(this.refs.scroll);\n        }, 200);\n    }\n\n    handleStart(event) {\n        this.touchY = event.pageY || event.targetTouches[0].pageY;\n        this.translateY = this.state.translateY;\n    }\n\n\n    handleMove(event) {\n        const touchY = event.pageY || event.targetTouches[0].pageY;\n        const dir = touchY - this.touchY;\n        const translateY = this.translateY + dir;\n        const direction = dir > 0 ? -1 : 1;\n\n        // 日期最小值，最大值限制\n        const date = this.state.dates[MIDDLE_INDEX];\n        const { max, min } = this.props;\n        if (date.getTime() < min.getTime() ||\n            date.getTime() > max.getTime()) {\n            return;\n        }\n\n        // 检测是否更新日期列表\n        if (this._checkIsUpdateDates(direction, translateY)) {\n            this._updateDates(direction);\n        }\n\n        this.setState({ translateY });\n    }\n\n    handleEnd(event) {\n        const touchY = event.pageY || event.changedTouches[0].pageY;\n        const dir = touchY - this.touchY;\n        const direction = dir > 0 ? -1 : 1;\n        this._moveToNext(direction);\n    }\n\n    /**\n     * 滑动日期选择器触屏事件\n     * @param  {Object} event 事件对象\n     * @return {undefined}\n     */\n    handleContentTouch(event) {\n        event.preventDefault();\n        if (this.animating) return;\n        if (event.type === 'touchstart') {\n            this.handleStart(event);\n        } else if (event.type === 'touchmove') {\n            this.handleMove(event);\n        } else if (event.type === 'touchend') {\n            this.handleEnd(event);\n        }\n    }\n\n    /**\n     * 滑动日期选择器鼠标事件\n     * @param  {Object} event 事件对象\n     * @return {undefined}\n     */\n    handleContentMouseDown(event) {\n        if (this.animating) return;\n        this.handleStart(event);\n        document.addEventListener('mousemove', this.handleContentMouseMove);\n        document.addEventListener('mouseup', this.handleContentMouseUp);\n    }\n\n    handleContentMouseMove(event) {\n        if (this.animating) return;\n        this.handleMove(event);\n    }\n\n    handleContentMouseUp(event) {\n        if (this.animating) return;\n        this.handleEnd(event);\n        document.removeEventListener('mousemove', this.handleContentMouseMove);\n        document.removeEventListener('mouseup', this.handleContentMouseUp);\n    }\n\n    /**\n     * 渲染一个日期DOM对象\n     * @param  {Object} date date数据\n     * @return {Object}      JSX对象\n     */\n    renderDatepickerItem(date, index) {\n        const className =\n            (date < this.props.min || date > this.props.max) ?\n            'disabled' : '';\n\n        return (\n            <li\n                key={index}\n                className={className}>\n                {TimeUtil.convertDate(date, this.props.format)}\n            </li>\n        );\n    }\n\n    render() {\n        const scrollStyle = formatCss({\n            transform: `translateY(${this.state.translateY}px)`,\n            marginTop: this.state.marginTop,\n        });\n\n        return (\n            <div className=\"datepicker-col-1\">\n                <div\n                    className=\"datepicker-viewport\"\n                    onTouchStart={this.handleContentTouch}\n                    onTouchMove={this.handleContentTouch}\n                    onTouchEnd={this.handleContentTouch}\n                    onMouseDown={this.handleContentMouseDown}>\n                    <div className=\"datepicker-wheel\">\n                        <ul\n                            ref=\"scroll\"\n                            className=\"datepicker-scroll\"\n                            style={scrollStyle}>\n                            {this.state.dates.map(this.renderDatepickerItem)}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePickerItem.propTypes = {\n    value: PropTypes.object,\n    min: PropTypes.object,\n    max: PropTypes.object,\n    format: PropTypes.string,\n    typeName: PropTypes.string,\n    onSelect: PropTypes.func,\n};\n\nexport default DatePickerItem;\n","/**\n * @module DatePicker Component\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport DatePickerItem from './DatePickerItem.js';\nimport PureRender from './pureRender.js';\nimport { convertDate, nextDate } from './time.js';\n\n/**\n * Class DatePicker Component Class\n * @extends Component\n */\nclass DatePicker extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: nextDate(this.props.value),\n        };\n\n        this.handleFinishBtnClick = this.handleFinishBtnClick.bind(this);\n        this.handleDateSelect = this.handleDateSelect.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // update value of state\n        const date = nextDate(nextProps.value);\n        if (date.getTime() !== this.state.value.getTime()) {\n            this.setState({ value: date });\n        }\n    }\n\n    /**\n     * Optimization component, Prevents unnecessary rendering\n     * Only props or state change or value before re-rendering\n     *\n     * @param  {Object} nextProps next props\n     * @param  {Object} nextState next state\n     * @return {Boolean}          Whether re-rendering\n     */\n    shouldComponentUpdate(nextProps, nextState) {\n        const date = nextDate(nextState.value);\n        return date.getTime() !== this.state.value.getTime() ||\n                PureRender.shouldComponentUpdate(nextProps, nextState, this.props, this.state);\n    }\n\n    /**\n     * 点击完成按钮事件\n     * @return {undefined}\n     */\n    handleFinishBtnClick() {\n        this.props.onSelect(this.state.value);\n    }\n\n    /**\n     * 选择下一个日期\n     * @return {undefined}\n     */\n    handleDateSelect(value) {\n        this.setState({ value });\n    }\n\n    /**\n     * render函数\n     * @return {Object} JSX对象\n     */\n    render() {\n        const { min, max, theme, dateFormat } = this.props;\n        const value = this.state.value;\n        const themeClassName =\n            ['default', 'dark', 'ios', 'android', 'android-dark'].indexOf(theme) === -1 ?\n            'default' : theme;\n\n        return (\n            <div\n                className={`datepicker ${themeClassName}`}>\n                <div className=\"datepicker-header\">{convertDate(value, 'YYYY/MM/DD')}</div>\n                <div className=\"datepicker-content\">\n                    <DatePickerItem\n                        value={value}\n                        min={min}\n                        max={max}\n                        typeName=\"Year\"\n                        format={dateFormat[0]}\n                        onSelect={this.handleDateSelect} />\n                    <DatePickerItem\n                        value={value}\n                        min={min}\n                        max={max}\n                        typeName=\"Month\"\n                        format={dateFormat[1]}\n                        onSelect={this.handleDateSelect} />\n                    <DatePickerItem\n                        value={value}\n                        min={min}\n                        max={max}\n                        typeName=\"Date\"\n                        format={dateFormat[2]}\n                        onSelect={this.handleDateSelect} />\n                </div>\n                <div className=\"datepicker-navbar\">\n                    <a\n                        className=\"datepicker-navbar-btn\"\n                        onClick={this.handleFinishBtnClick}>完成</a>\n                    <a\n                        className=\"datepicker-navbar-btn\"\n                        onClick={this.props.onCancel}>取消</a>\n                </div>\n            </div>\n        );\n    }\n }\n\nDatePicker.propTypes = {\n    theme: PropTypes.string,\n    value: PropTypes.object,\n    min: PropTypes.object,\n    max: PropTypes.object,\n    dateFormat: PropTypes.array,\n    onSelect: PropTypes.func,\n    onCancel: PropTypes.func,\n};\n\nexport default DatePicker;\n","import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nconst renderSubtreeIntoContainer = ReactDOM.unstable_renderSubtreeIntoContainer;\n\n\nclass Modal extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n        isOpen: PropTypes.bool,\n    }\n\n    static defaultProps = {\n        isOpen: false,\n    }\n\n    componentDidMount() {\n        this._div = document.createElement('div');\n        this._div.classList.add('Modal-Portal');\n        document.body.appendChild(this._div);\n        this.renderPortal(this.props);\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.renderPortal(newProps);\n    }\n\n    componentWillUnmount() {\n        ReactDOM.unmountComponentAtNode(this._div);\n        this._div.parentNode.removeChild(this._div);\n    }\n\n    renderPortal(props) {\n        const portal =\n        React.cloneElement(this.props.children, { ...props, key: 'portal' }, null);\n\n        this.portal =\n        renderSubtreeIntoContainer(this, portal, this._div);\n    }\n\n    render() {\n        return (<noscript / >);\n    }\n}\n\nexport default Modal;\n"]}