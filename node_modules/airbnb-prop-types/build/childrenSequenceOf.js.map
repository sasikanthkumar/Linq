{"version":3,"sources":["../src/childrenSequenceOf.js"],"names":["childrenSequenceOfValidator","specifiers","seq","validator","childrenSequenceOf","props","propName","componentName","TypeError","propValue","children","length","rest","isRequired","childrenSequenceOfRequired"],"mappings":";;;qBAMwBA,2B;;AANxB;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,2BAAT,GAAoD;AAAA,oCAAZC,UAAY;AAAZA,cAAY;AAAA;;AACjE,MAAMC,MAAM,yCAAcD,UAAd,CAAZ;;AAEA,MAAME;AAAY,aAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,QAAnC,EAA6CC,aAA7C,EAAqE;AACrF,UAAID,aAAa,UAAjB,EAA6B;AAC3B,eAAO,IAAIE,SAAJ,QAAiBD,aAAjB,iFAAkGD,QAAlG,QAAP;AACD;;AAED,UAAMG,YAAYJ,MAAMC,QAAN,CAAlB;AACA,UAAMI,WAAW,qCAAmBD,SAAnB,CAAjB;AACA,UAAIC,SAASC,MAAT,KAAoB,CAAxB,EAA2B;AACzB,eAAO,IAAP;AACD;;AAToF,yCAANC,IAAM;AAANA,YAAM;AAAA;;AAUrF,aAAOV,sBAAI,yBAAO,EAAP,EAAWG,KAAX,EAAkB,EAAEK,kBAAF,EAAlB,CAAJ,EAAqCJ,QAArC,EAA+CC,aAA/C,SAAiEK,IAAjE,EAAP;AACD;;AAXK,WAAqBR,kBAArB;AAAA,KAAN;;AAaAD,YAAUU,UAAV;AAAuB,aAASC,0BAAT,CACrBT,KADqB,EAErBC,QAFqB,EAGrBC,aAHqB,EAKrB;AACA,UAAID,aAAa,UAAjB,EAA6B;AAC3B,eAAO,IAAIE,SAAJ,QAAiBD,aAAjB,iFAAkGD,QAAlG,QAAP;AACD;;AAED,UAAMG,YAAYJ,MAAMC,QAAN,CAAlB;AACA,UAAMI,WAAW,qCAAmBD,SAAnB,CAAjB;AACA,UAAIC,SAASC,MAAT,KAAoB,CAAxB,EAA2B;AACzB,eAAO,IAAIH,SAAJ,QAAiBD,aAAjB,0CAAP;AACD;;AATD,yCADGK,IACH;AADGA,YACH;AAAA;;AAUA,aAAOV,IAAIW,UAAJ,aAAe,yBAAO,EAAP,EAAWR,KAAX,EAAkB,EAAEK,kBAAF,EAAlB,CAAf,EAAgDJ,QAAhD,EAA0DC,aAA1D,SAA4EK,IAA5E,EAAP;AACD;;AAhBD,WAAgCE,0BAAhC;AAAA;;AAkBA,SAAO,gCAAcX,SAAd,EAAyB,oBAAzB,EAA+CF,UAA/C,CAAP;AACD","file":"childrenSequenceOf.js","sourcesContent":["import assign from 'object.assign';\n\nimport sequenceOf from './sequenceOf';\nimport renderableChildren from './helpers/renderableChildren';\nimport wrapValidator from './helpers/wrapValidator';\n\nexport default function childrenSequenceOfValidator(...specifiers) {\n  const seq = sequenceOf(...specifiers);\n\n  const validator = function childrenSequenceOf(props, propName, componentName, ...rest) {\n    if (propName !== 'children') {\n      return new TypeError(`${componentName} is using the childrenSequenceOf validator on non-children prop \"${propName}\"`);\n    }\n\n    const propValue = props[propName];\n    const children = renderableChildren(propValue);\n    if (children.length === 0) {\n      return null;\n    }\n    return seq(assign({}, props, { children }), propName, componentName, ...rest);\n  };\n\n  validator.isRequired = function childrenSequenceOfRequired(\n    props,\n    propName,\n    componentName,\n    ...rest\n  ) {\n    if (propName !== 'children') {\n      return new TypeError(`${componentName} is using the childrenSequenceOf validator on non-children prop \"${propName}\"`);\n    }\n\n    const propValue = props[propName];\n    const children = renderableChildren(propValue);\n    if (children.length === 0) {\n      return new TypeError(`${componentName}: renderable children are required.`);\n    }\n    return seq.isRequired(assign({}, props, { children }), propName, componentName, ...rest);\n  };\n\n  return wrapValidator(validator, 'childrenSequenceOf', specifiers);\n}\n"]}