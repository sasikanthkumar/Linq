{"version":3,"sources":["../src/uniqueArrayOf.js"],"names":["uniqueArrayOfTypeValidator","unique","type","name","TypeError","arrayValidator","arrayOf","validator","isRequired"],"mappings":";;;qBAMwBA,0B;;AANxB;;AACA;;;;AACA;;;;;;AAEA,IAAMC,SAAS,+BAAf;;AAEe,SAASD,0BAAT,CAAoCE,IAApC,EAAsE;AAAA,MAA5BC,IAA4B,uEAArB,mBAAqB;;AACnF,MAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;AAC9B,UAAM,IAAIE,SAAJ,CAAc,mCAAd,CAAN;AACD;;AAED,MAAMC,iBAAiB,iBAAUC,OAAV,CAAkBJ,IAAlB,CAAvB;;AAEA,MAAMK,YAAY,sBAAI,CAACF,cAAD,EAAiBJ,MAAjB,CAAJ,EAA8BE,IAA9B,CAAlB;AACAI,YAAUC,UAAV,GAAuB,sBAAI,CACzBH,eAAeG,UADU,EAEzBP,OAAOO,UAFkB,CAAJ,SAGjBL,IAHiB,kBAAvB;;AAKA,SAAOI,SAAP;AACD","file":"uniqueArrayOf.js","sourcesContent":["import { PropTypes } from 'react';\nimport and from './and';\nimport uniqueArray from './uniqueArray';\n\nconst unique = uniqueArray();\n\nexport default function uniqueArrayOfTypeValidator(type, name = 'uniqueArrayOfType') {\n  if (typeof type !== 'function') {\n    throw new TypeError('type must be a validator function');\n  }\n\n  const arrayValidator = PropTypes.arrayOf(type);\n\n  const validator = and([arrayValidator, unique], name);\n  validator.isRequired = and([\n    arrayValidator.isRequired,\n    unique.isRequired,\n  ], `${name}.isRequired`);\n\n  return validator;\n}\n"]}